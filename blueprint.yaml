name: MultipleDCs
version: 1.1
formatVersion: 1
inputs:
  DataCenter:
    type: string
    title: Choose Datacenter
    description: Each Datacenter has dedicated cluster for Provisioning
    oneOf:
      - title: vCenter155 -DC Regions
        const: 'vCenter155:Cluster'
      - title: vCenter102- DC Region
        const: 'vCenter102:cluster'
  TShirtSize:
    type: string
    enum:
      - Small
      - Medium
      - Large
    title: VM Size
    description: |-
      <b> Select the size of the deployment. </b> <br>
      Small =  2 CPU - 2 GB RAM, <br>
      Medium = 4 CPU - 4 GB RAM, <br> 
      Large = 8 CPU - 8 GB RAM <br>
  VMCount:
    type: integer
    default: 1
    description: Enter VM count between 1 to 10
    title: Choose VM Count
    minimum: 1
    maximum: 10
  ExtraUser:
    type: string
    title: 'VM Username:'
  EnterPassword:
    type: string
    title: VM Password
    encrypted: true
  Notification:
    type: string
    enum:
      - Slack
      - Teams
  NotificationChanel:
    type: string
    title: Channel Name
resources:
  vsphere_network:
    type: Cloud.vSphere.Network
    properties:
      networkType: existing
      constraints:
        - tag: '${input.DataCenter == ''vCenter155:Cluster'' ? ''vCenter155:network'':''vCenter102:network''}'
  vSphere_Machine_Linux:
    type: Cloud.vSphere.Machine
    properties:
      image: Linux
      flavor: '${input.TShirtSize}'
      name: '${resource.name}'
      count: '${input.VMCount}'
      constraints:
        - tag: '${input.DataCenter}'
      networks:
        - network: '${resource.vsphere_network.id}'
      cloudConfig: |
        #cloud-config
        repo_update: true
        repo_upgrade: all
        packages:
          - httpd
          - php
        chpasswd:
          list: |
            ${input.ExtraUser}:${input.EnterPassword}
        users:
           - default
           - name: '${input.ExtraUser}'
             lock_passwd: false
             groups: [sudo, admin]
             shell: '/bin/bash'
             sudo: ['ALL=(ALL) NOPASSWD:ALL']
             passwd: '${input.EnterPassword}'
        runcmd:
          - echo "this is Ankush" >> /tmp/test1.log
